<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" hreflang="en" /><updated>2024-04-10T23:05:35+08:00</updated><id>/feed.xml</id><title type="html">Chirpy</title><subtitle>A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle><entry><title type="html">async pf</title><link href="/posts/async-pf/" rel="alternate" type="text/html" title="async pf" /><published>2024-04-10T12:20:00+08:00</published><updated>2024-04-10T12:20:00+08:00</updated><id>/posts/async-pf</id><content type="html" xml:base="/posts/async-pf/"><![CDATA[<h1 id="introduce">introduce</h1>
<p>在支持EPT的架构中, 对于<code class="language-plaintext highlighter-rouge">GVA-&gt;HPA</code>一般有两段映射:</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">GVA-&gt;GPA</code></li>
  <li><code class="language-plaintext highlighter-rouge">GPA-&gt;HPA</code></li>
</ul>

<p>而host kernel (kvm) 需要关心的是 <code class="language-plaintext highlighter-rouge">GPA-&gt;HPA</code>的映射, 需要host做的事情主要有
以下几个:</p>
<ol>
  <li>捕捉相关 VM-exit event (EPT violation), 得到 GPA</li>
  <li>分配page</li>
  <li>建立映射关系(当然这个映射关系, 不止是GPA-&gt;HPA的mmu pgtable, 还有 HVA – GPA,
在这里不展开, 总之分配好具体的page(分配HPA), 以及为其建立好 mmu pgtable, 
就可以完成该事件的处理)</li>
</ol>

<p>但是, 已经建立好映射的页面, 也是qemu进程的虚拟地址空间(匿名页), 是可以被swap out,
当被swap out后, GUEST 访问该HPA对应的 GVA/GPA时, 仍然会触发 EPT violation. 这时还会
再走一次 VM-exit, 而且也需要完成上面所述的三件事, 其中第二件:分配page, 需要swap in
之前被swap out的page, 路径比较长, 如下:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre>VM-exit
  handle_ept_violation
    kvm_mmu_page_fault
      tdp_page_fault
        gfn_to_pfn
          hva_to_pfn
            get_user_pages --slow path
</pre></td></tr></tbody></table></code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">get_user_pages</code>会走到slow path, 由于会走swap in流程, 所以该过程执行较慢. 所以大佬们就想着
能不能让其异步执行, 然后让vcpu先不complete 造成 EPT violation 的 instruction, 去干别的事
情, 等page present后, 再去执行该指令. 另外将 get_user_pages 让一个 dedicated thread 去完成,
这样, 对于虚拟机来说, 就相当于搞了一个额外的 硬件, 专门去处理 swap in, 解放了vcpu的算力.</p>

<blockquote>
  <p>NOTE</p>

  <p>大家思考下, 如果要达到该目的, 一定是让GUEST有意无意的 sche out 造成 EPT violation
的进程,</p>
</blockquote>

<p>该上面流程总结如下:</p>

<!--
<details>
<summary>简要需求图</summary>
-->
<hr />
<hr />

<div class="graphviz-wrapper">

<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: G Pages: 1 -->
<svg role="img" aria-label="graphviz-8d7cf6fb51f0587413a2482c375da409" width="1530pt" height="784pt" viewBox="0.00 0.00 1530.00 784.48">
<title>graphviz-8d7cf6fb51f0587413a2482c375da409</title>
<desc>
digraph G {
    subgraph cluster_host {
        style=&quot;filled&quot;
        color=&quot;#71324556&quot;
        subgraph cluster_host_dedicated_thread {
            do_slow_path [
                shape=&quot;note&quot;
                label=&quot;I&#39;m a delicated thread, \nLike a special hardware, \nsharing the pressure of VCPU&quot;
            ]
            label=&quot;dedicated thread&quot;
            
            have_get_page [
                label=&quot;get page, \nPAGE IS PRESENT!&quot;
            ]

            do_slow_path-&gt;
                &quot;get_user_pages(slow path)&quot;-&gt;
                have_get_page
            

        }
        subgraph cluster_host_kvm_vcpu_thread {
            &quot;ept violation handle&quot;-&gt;
            get_user_page_fast

            get_user_page_fast [
                label=&quot;get_user_pages() -- \nfast path&quot;
            ]
            dont_do_slow_path [
                shape=&quot;note&quot;
                label=&quot;I don&#39;t want handle slow path, \nit will speed to much time&quot;
            ]
            get_user_page_fast_is_success [
                shape=&quot;diamond&quot;
                label=&quot;get_user_page_fast \nSUCCESS ?&quot;
            ]
            let_guest_sched_out [
                shape=&quot;note&quot;
                label=&quot;Let vcpu do other things\n rather than wait page present&quot;
            ]
            get_user_page_fast-&gt;get_user_page_fast_is_success 

            get_user_page_fast_is_success-&gt;dont_do_slow_path [
                label=&quot;N, seem to need do slow path&quot;
            ]
            dont_do_slow_path-&gt;let_guest_sched_out 
                
            label=&quot;host kvm vcpu thread&quot;
        }
        label = &quot;host&quot;
    }
    subgraph cluster_guest {
        style=&quot;filled&quot;
        color=&quot;#12323456&quot;
        subgraph cluster_trigger_ept_violation_task {
            task1_access_a_memory [
                label=&quot;acesss a memory address [BEG]&quot;
                color=&quot;white&quot;
                style=&quot;filled&quot;
            ]
            
            access_memory_success [
                label=&quot;access memory success&quot;
            ]

            trigger_EPT_violation [
                label=&quot;trigger EPT violation&quot;
            ]
            task1_access_a_memory -&gt;
                trigger_EPT_violation [
                label=&quot;page NOT present&quot;
            ]
            label=&quot;TASK1 trigger ept vioaltion&quot;
        }

        subgraph cluster_sched_in_task2 {
            task2_run_a_time [
                label=&quot;task2_run_a_time&quot;
            ]
            label=&quot;task2&quot;
        }
        trigger_EPT_violation -&gt; guest_sched_module [
            label=&quot;sched out TASK1&quot;
            color=&quot;blue&quot;
        ]

        guest_sched_module-&gt;task2_run_a_time [
            label=&quot;sched out TASK1&quot;
            color=&quot;blue&quot;

        ]

        guest_sched_module [
            label=&quot;guest sched module&quot;
            style=&quot;filled&quot;
            color=&quot;red&quot;
        ]

        task2_run_a_time-&gt;guest_sched_module [
            label=&quot;sched in TASK1&quot;
            color=&quot;red&quot;
        ]
        guest_sched_module-&gt;task1_access_a_memory [
            label=&quot;sched in TASK1&quot;
            color=&quot;red&quot;
        ]

        task1_access_a_memory-&gt;access_memory_success [
            label=&quot;page is present&quot;
        ]

        label=&quot;guest&quot;
    }
    trigger_EPT_violation-&gt;&quot;ept violation handle&quot; [
        label=&quot;trap to HOST&quot;
    ]
    dont_do_slow_path-&gt;do_slow_path [
        label=&quot;start a work&quot;
    ]
    have_get_page-&gt;guest_sched_module [
        color=&quot;green&quot;
    ]
    let_guest_sched_out-&gt;guest_sched_module [
        color=&quot;green&quot;
    ]
    get_user_page_fast_is_success-&gt;task1_access_a_memory [
        label=&quot;Y, return to GUEST direct&quot;
    ]
}
</desc>

<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 780.48)">
<title>G</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-780.48 1526,-780.48 1526,4 -4,4" />
<g id="clust1" class="cluster">
<title>cluster_host</title>
<polygon fill="#713245" fill-opacity="0.337255" stroke="#713245" stroke-opacity="0.337255" points="8,-8 8,-768.48 648,-768.48 648,-8 8,-8" />
<text text-anchor="middle" x="328" y="-753.28" font-family="Times,serif" font-size="14.00">host</text>
</g>
<g id="clust2" class="cluster">
<title>cluster_host_dedicated_thread</title>
<polygon fill="#713245" fill-opacity="0.337255" stroke="#713245" stroke-opacity="0.337255" points="16,-16 16,-285.74 300,-285.74 300,-16 16,-16" />
<text text-anchor="middle" x="158" y="-270.54" font-family="Times,serif" font-size="14.00">dedicated thread</text>
</g>
<g id="clust3" class="cluster">
<title>cluster_host_kvm_vcpu_thread</title>
<polygon fill="#713245" fill-opacity="0.337255" stroke="#713245" stroke-opacity="0.337255" points="308,-201.24 308,-737.48 640,-737.48 640,-201.24 308,-201.24" />
<text text-anchor="middle" x="474" y="-722.28" font-family="Times,serif" font-size="14.00">host kvm vcpu thread</text>
</g>
<g id="clust4" class="cluster">
<title>cluster_guest</title>
<polygon fill="#123234" fill-opacity="0.337255" stroke="#123234" stroke-opacity="0.337255" points="656,-106.74 656,-425.74 1514,-425.74 1514,-106.74 656,-106.74" />
<text text-anchor="middle" x="1085" y="-410.54" font-family="Times,serif" font-size="14.00">guest</text>
</g>
<g id="clust5" class="cluster">
<title>cluster_trigger_ept_violation_task</title>
<polygon fill="#123234" fill-opacity="0.337255" stroke="#123234" stroke-opacity="0.337255" points="1014,-202.24 1014,-394.74 1506,-394.74 1506,-202.24 1014,-202.24" />
<text text-anchor="middle" x="1260" y="-379.54" font-family="Times,serif" font-size="14.00">TASK1 trigger ept vioaltion</text>
</g>
<g id="clust6" class="cluster">
<title>cluster_sched_in_task2</title>
<polygon fill="#123234" fill-opacity="0.337255" stroke="#123234" stroke-opacity="0.337255" points="664,-202.24 664,-277.24 864,-277.24 864,-202.24 664,-202.24" />
<text text-anchor="middle" x="764" y="-262.04" font-family="Times,serif" font-size="14.00">task2</text>
</g>
<!-- do_slow_path -->
<g id="node1" class="node">
<title>do_slow_path</title>
<polygon fill="none" stroke="black" points="281,-254.74 57,-254.74 57,-201.74 287,-201.74 287,-248.74 281,-254.74" />
<polyline fill="none" stroke="black" points="281,-254.74 281,-248.74 " />
<polyline fill="none" stroke="black" points="287,-248.74 281,-248.74 " />
<text text-anchor="middle" x="172" y="-239.54" font-family="Times,serif" font-size="14.00">I&#39;m a delicated thread, </text>
<text text-anchor="middle" x="172" y="-224.54" font-family="Times,serif" font-size="14.00">Like a special hardware, </text>
<text text-anchor="middle" x="172" y="-209.54" font-family="Times,serif" font-size="14.00">sharing the pressure of VCPU</text>
</g>
<!-- get_user_pages(slow path) -->
<g id="node3" class="node">
<title>get_user_pages(slow path)</title>
<ellipse fill="none" stroke="black" cx="158" cy="-132.74" rx="133.78" ry="18" />
<text text-anchor="middle" x="158" y="-129.04" font-family="Times,serif" font-size="14.00">get_user_pages(slow path)</text>
</g>
<!-- do_slow_path&#45;&gt;get_user_pages(slow path) -->
<g id="edge1" class="edge">
<title>do_slow_path&#45;&gt;get_user_pages(slow path)</title>
<path fill="none" stroke="black" d="M168.17,-201.69C166.29,-189.1 164.02,-173.91 162.1,-161.09" />
<polygon fill="black" stroke="black" points="165.52,-160.36 160.58,-150.98 158.6,-161.39 165.52,-160.36" />
</g>
<!-- have_get_page -->
<g id="node2" class="node">
<title>have_get_page</title>
<ellipse fill="none" stroke="black" cx="169" cy="-50.87" rx="111.95" ry="26.74" />
<text text-anchor="middle" x="169" y="-54.67" font-family="Times,serif" font-size="14.00">get page, </text>
<text text-anchor="middle" x="169" y="-39.67" font-family="Times,serif" font-size="14.00">PAGE IS PRESENT!</text>
</g>
<!-- guest_sched_module -->
<g id="node13" class="node">
<title>guest_sched_module</title>
<ellipse fill="red" stroke="red" cx="792" cy="-132.74" rx="103.18" ry="18" />
<text text-anchor="middle" x="792" y="-129.04" font-family="Times,serif" font-size="14.00">guest sched module</text>
</g>
<!-- have_get_page&#45;&gt;guest_sched_module -->
<g id="edge15" class="edge">
<title>have_get_page&#45;&gt;guest_sched_module</title>
<path fill="none" stroke="green" d="M265.89,-64.29C384.98,-79.56 585.53,-105.27 701.58,-120.15" />
<polygon fill="green" stroke="green" points="701.15,-123.62 711.51,-121.42 702.04,-116.68 701.15,-123.62" />
</g>
<!-- get_user_pages(slow path)&#45;&gt;have_get_page -->
<g id="edge2" class="edge">
<title>get_user_pages(slow path)&#45;&gt;have_get_page</title>
<path fill="none" stroke="black" d="M160.39,-114.41C161.45,-106.68 162.75,-97.26 164.01,-88.1" />
<polygon fill="black" stroke="black" points="167.51,-88.36 165.4,-77.97 160.57,-87.4 167.51,-88.36" />
</g>
<!-- ept violation handle -->
<g id="node4" class="node">
<title>ept violation handle</title>
<ellipse fill="none" stroke="black" cx="502" cy="-688.48" rx="102.88" ry="18" />
<text text-anchor="middle" x="502" y="-684.78" font-family="Times,serif" font-size="14.00">ept violation handle</text>
</g>
<!-- get_user_page_fast -->
<g id="node5" class="node">
<title>get_user_page_fast</title>
<ellipse fill="none" stroke="black" cx="495" cy="-606.61" rx="109.7" ry="26.74" />
<text text-anchor="middle" x="495" y="-610.41" font-family="Times,serif" font-size="14.00">get_user_pages() &#45;&#45; </text>
<text text-anchor="middle" x="495" y="-595.41" font-family="Times,serif" font-size="14.00">fast path</text>
</g>
<!-- ept violation handle&#45;&gt;get_user_page_fast -->
<g id="edge3" class="edge">
<title>ept violation handle&#45;&gt;get_user_page_fast</title>
<path fill="none" stroke="black" d="M500.48,-670.15C499.8,-662.42 498.98,-653 498.18,-643.84" />
<polygon fill="black" stroke="black" points="501.65,-643.37 497.29,-633.71 494.67,-643.98 501.65,-643.37" />
</g>
<!-- get_user_page_fast_is_success -->
<g id="node7" class="node">
<title>get_user_page_fast_is_success</title>
<polygon fill="none" stroke="black" points="474,-542.74 316,-504.74 474,-466.74 632,-504.74 474,-542.74" />
<text text-anchor="middle" x="474" y="-508.54" font-family="Times,serif" font-size="14.00">get_user_page_fast </text>
<text text-anchor="middle" x="474" y="-493.54" font-family="Times,serif" font-size="14.00">SUCCESS ?</text>
</g>
<!-- get_user_page_fast&#45;&gt;get_user_page_fast_is_success -->
<g id="edge4" class="edge">
<title>get_user_page_fast&#45;&gt;get_user_page_fast_is_success</title>
<path fill="none" stroke="black" d="M489.54,-579.63C487.7,-570.88 485.59,-560.84 483.53,-551.05" />
<polygon fill="black" stroke="black" points="486.89,-550.05 481.41,-540.99 480.04,-551.49 486.89,-550.05" />
</g>
<!-- dont_do_slow_path -->
<g id="node6" class="node">
<title>dont_do_slow_path</title>
<polygon fill="none" stroke="black" points="547.5,-364.74 316.5,-364.74 316.5,-326.74 553.5,-326.74 553.5,-358.74 547.5,-364.74" />
<polyline fill="none" stroke="black" points="547.5,-364.74 547.5,-358.74 " />
<polyline fill="none" stroke="black" points="553.5,-358.74 547.5,-358.74 " />
<text text-anchor="middle" x="435" y="-349.54" font-family="Times,serif" font-size="14.00">I don&#39;t want handle slow path, </text>
<text text-anchor="middle" x="435" y="-334.54" font-family="Times,serif" font-size="14.00">it will speed to much time</text>
</g>
<!-- dont_do_slow_path&#45;&gt;do_slow_path -->
<g id="edge14" class="edge">
<title>dont_do_slow_path&#45;&gt;do_slow_path</title>
<path fill="none" stroke="black" d="M393.91,-326.69C352.65,-308.57 288.37,-280.35 239.6,-258.93" />
<polygon fill="black" stroke="black" points="240.93,-255.69 230.37,-254.87 238.12,-262.1 240.93,-255.69" />
<text text-anchor="middle" x="393" y="-297.54" font-family="Times,serif" font-size="14.00">start a work</text>
</g>
<!-- let_guest_sched_out -->
<g id="node8" class="node">
<title>let_guest_sched_out</title>
<polygon fill="none" stroke="black" points="606,-247.24 376,-247.24 376,-209.24 612,-209.24 612,-241.24 606,-247.24" />
<polyline fill="none" stroke="black" points="606,-247.24 606,-241.24 " />
<polyline fill="none" stroke="black" points="612,-241.24 606,-241.24 " />
<text text-anchor="middle" x="494" y="-232.04" font-family="Times,serif" font-size="14.00">Let vcpu do other things</text>
<text text-anchor="middle" x="494" y="-217.04" font-family="Times,serif" font-size="14.00"> rather than wait page present</text>
</g>
<!-- dont_do_slow_path&#45;&gt;let_guest_sched_out -->
<g id="edge6" class="edge">
<title>dont_do_slow_path&#45;&gt;let_guest_sched_out</title>
<path fill="none" stroke="black" d="M444.22,-326.69C453.82,-307.9 468.97,-278.24 480.04,-256.57" />
<polygon fill="black" stroke="black" points="483.22,-258.04 484.65,-247.54 476.99,-254.85 483.22,-258.04" />
</g>
<!-- get_user_page_fast_is_success&#45;&gt;dont_do_slow_path -->
<g id="edge5" class="edge">
<title>get_user_page_fast_is_success&#45;&gt;dont_do_slow_path</title>
<path fill="none" stroke="black" d="M465.25,-468.51C458.22,-440.22 448.49,-401.03 441.98,-374.83" />
<polygon fill="black" stroke="black" points="445.29,-373.66 439.49,-364.8 438.5,-375.35 445.29,-373.66" />
<text text-anchor="middle" x="565.5" y="-437.54" font-family="Times,serif" font-size="14.00">N, seem to need do slow path</text>
</g>
<!-- task1_access_a_memory -->
<g id="node9" class="node">
<title>task1_access_a_memory</title>
<ellipse fill="white" stroke="white" cx="1183" cy="-345.74" rx="160.57" ry="18" />
<text text-anchor="middle" x="1183" y="-342.04" font-family="Times,serif" font-size="14.00">acesss a memory address [BEG]</text>
</g>
<!-- get_user_page_fast_is_success&#45;&gt;task1_access_a_memory -->
<g id="edge17" class="edge">
<title>get_user_page_fast_is_success&#45;&gt;task1_access_a_memory</title>
<path fill="none" stroke="black" d="M554.3,-485.96C691.18,-455.65 968.05,-394.34 1104.03,-364.23" />
<polygon fill="black" stroke="black" points="1104.96,-367.61 1113.97,-362.03 1103.45,-360.77 1104.96,-367.61" />
<text text-anchor="middle" x="878.5" y="-437.54" font-family="Times,serif" font-size="14.00">Y, return to GUEST direct</text>
</g>
<!-- let_guest_sched_out&#45;&gt;guest_sched_module -->
<g id="edge16" class="edge">
<title>let_guest_sched_out&#45;&gt;guest_sched_module</title>
<path fill="none" stroke="green" d="M546.57,-209.13C581.46,-197.27 628.32,-181.64 670,-168.74 689.27,-162.78 710.36,-156.6 729.5,-151.13" />
<polygon fill="green" stroke="green" points="730.65,-154.44 739.31,-148.34 728.74,-147.71 730.65,-154.44" />
</g>
<!-- access_memory_success -->
<g id="node10" class="node">
<title>access_memory_success</title>
<ellipse fill="none" stroke="black" cx="1142" cy="-228.24" rx="120.48" ry="18" />
<text text-anchor="middle" x="1142" y="-224.54" font-family="Times,serif" font-size="14.00">access memory success</text>
</g>
<!-- task1_access_a_memory&#45;&gt;access_memory_success -->
<g id="edge12" class="edge">
<title>task1_access_a_memory&#45;&gt;access_memory_success</title>
<path fill="none" stroke="black" d="M1144.75,-328.13C1137.24,-323.03 1130.35,-316.63 1126,-308.74 1117.05,-292.5 1121.54,-271.94 1128.01,-255.79" />
<polygon fill="black" stroke="black" points="1131.33,-256.95 1132.2,-246.39 1124.93,-254.1 1131.33,-256.95" />
<text text-anchor="middle" x="1181.5" y="-297.54" font-family="Times,serif" font-size="14.00">page is present</text>
</g>
<!-- trigger_EPT_violation -->
<g id="node11" class="node">
<title>trigger_EPT_violation</title>
<ellipse fill="none" stroke="black" cx="1389" cy="-228.24" rx="108.58" ry="18" />
<text text-anchor="middle" x="1389" y="-224.54" font-family="Times,serif" font-size="14.00">trigger EPT violation</text>
</g>
<!-- task1_access_a_memory&#45;&gt;trigger_EPT_violation -->
<g id="edge7" class="edge">
<title>task1_access_a_memory&#45;&gt;trigger_EPT_violation</title>
<path fill="none" stroke="black" d="M1208.24,-327.92C1229.65,-313.66 1257.31,-295.3 1260,-293.74 1287.48,-277.85 1319.39,-261.87 1344.6,-249.8" />
<polygon fill="black" stroke="black" points="1346.38,-252.83 1353.9,-245.37 1343.37,-246.5 1346.38,-252.83" />
<text text-anchor="middle" x="1325.5" y="-297.54" font-family="Times,serif" font-size="14.00">page NOT present</text>
</g>
<!-- trigger_EPT_violation&#45;&gt;ept violation handle -->
<g id="edge13" class="edge">
<title>trigger_EPT_violation&#45;&gt;ept violation handle</title>
<path fill="none" stroke="black" d="M1392.87,-246.36C1397.61,-268.82 1405,-309.52 1405,-344.74 1405,-607.61 1405,-607.61 1405,-607.61 1405,-647.03 851.8,-673.67 611.38,-683.39" />
<polygon fill="black" stroke="black" points="611.07,-679.9 601.22,-683.8 611.35,-686.89 611.07,-679.9" />
<text text-anchor="middle" x="1453" y="-501.04" font-family="Times,serif" font-size="14.00">trap to HOST</text>
</g>
<!-- trigger_EPT_violation&#45;&gt;guest_sched_module -->
<g id="edge8" class="edge">
<title>trigger_EPT_violation&#45;&gt;guest_sched_module</title>
<path fill="none" stroke="blue" d="M1329.45,-213.19C1310.8,-209.03 1290.1,-204.68 1271,-201.24 1137.7,-177.2 982.22,-156.66 885.43,-144.75" />
<polygon fill="blue" stroke="blue" points="885.73,-141.26 875.38,-143.52 884.88,-148.21 885.73,-141.26" />
<text text-anchor="middle" x="1226.5" y="-172.54" font-family="Times,serif" font-size="14.00">sched out TASK1</text>
</g>
<!-- task2_run_a_time -->
<g id="node12" class="node">
<title>task2_run_a_time</title>
<ellipse fill="none" stroke="black" cx="764" cy="-228.24" rx="91.78" ry="18" />
<text text-anchor="middle" x="764" y="-224.54" font-family="Times,serif" font-size="14.00">task2_run_a_time</text>
</g>
<!-- task2_run_a_time&#45;&gt;guest_sched_module -->
<g id="edge10" class="edge">
<title>task2_run_a_time&#45;&gt;guest_sched_module</title>
<path fill="none" stroke="red" d="M714.2,-212.99C688.36,-202.96 664.86,-187.92 679,-168.74 685.33,-160.16 693.73,-153.62 703.12,-148.64" />
<polygon fill="red" stroke="red" points="704.78,-151.73 712.38,-144.34 701.83,-145.38 704.78,-151.73" />
<text text-anchor="middle" x="735" y="-172.54" font-family="Times,serif" font-size="14.00">sched in TASK1</text>
</g>
<!-- guest_sched_module&#45;&gt;task1_access_a_memory -->
<g id="edge11" class="edge">
<title>guest_sched_module&#45;&gt;task1_access_a_memory</title>
<path fill="none" stroke="red" d="M865.48,-145.5C890.66,-151.14 914.43,-158.86 922,-168.74 926.06,-174.03 924.83,-177.7 922,-183.74 916.85,-194.74 906.15,-190.24 901,-201.24 885.07,-235.25 877.32,-256.59 901,-285.74 920.38,-309.6 986.17,-324.15 1049.33,-332.83" />
<polygon fill="red" stroke="red" points="1049.06,-336.32 1059.44,-334.17 1049.99,-329.39 1049.06,-336.32" />
<text text-anchor="middle" x="957" y="-224.54" font-family="Times,serif" font-size="14.00">sched in TASK1</text>
</g>
<!-- guest_sched_module&#45;&gt;task2_run_a_time -->
<g id="edge9" class="edge">
<title>guest_sched_module&#45;&gt;task2_run_a_time</title>
<path fill="none" stroke="blue" d="M796.04,-150.79C797.64,-160.64 798.39,-173.14 795,-183.74 792.96,-190.12 789.61,-196.36 785.84,-202.03" />
<polygon fill="blue" stroke="blue" points="782.79,-200.27 779.72,-210.41 788.44,-204.4 782.79,-200.27" />
<text text-anchor="middle" x="857.5" y="-172.54" font-family="Times,serif" font-size="14.00">sched out TASK1</text>
</g>
</g>
</svg>
</div>

<p>由上图可见, 引入async pf 的逻辑是让其能够在触发 EPT violation后, 能够让VCPU 调度
到另外一个task, 从而阻塞触发 EPT violation 的进程执行. 为了达到这一目的, 做了以下改动:</p>

<ul>
  <li>VCPU 线程在执行<code class="language-plaintext highlighter-rouge">get_user_page()</code>时, 仅执行fast path, 如果page 不是present的, 该接口直接
返回, 而剩下的工作, 则交给另外一个<code class="language-plaintext highlighter-rouge">dedicated thread</code> 去做</li>
  <li>KVM 会通过一些方式, 让 GUEST 执行调度, 从而避免再次执行触发<code class="language-plaintext highlighter-rouge">EPT violation</code>的指令.具体方法
有两种 : 对应于半虚拟化方式, 和非半虚拟化方式, 我们下面会分别讨论</li>
</ul>

<p>我们首先讨论非半虚拟化方式:</p>

<h1 id="非半虚拟化方式">非半虚拟化方式</h1>
<p>我们知道, 如果达到这一目的, 就必须让 GUEST 去 sched out 当前触发 EPT violation 的 tasks, 
而非半虚拟化方式, 就是对 guest transparent, 所以, 又得要求guest 是靠自己当前的调度逻辑, 主动
的schedule, KVM 很巧妙的利用了操作系统使用时钟中断进行调度, 来达到这一目的, 主要步骤如下:</p>

<hr />
<hr />

<div class="graphviz-wrapper">

<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: G Pages: 1 -->
<svg role="img" aria-label="graphviz-f344c85124c6ea27b12ef8f7edc3307c" width="1123pt" height="834pt" viewBox="0.00 0.00 1123.00 833.83">
<title>graphviz-f344c85124c6ea27b12ef8f7edc3307c</title>
<desc>
digraph G {
    subgraph cluster_host {
        style=&quot;filled&quot;
        color=&quot;#71324556&quot;
        subgraph cluster_host_vcpu_thread {
            get_user_page_fast [
                label=&quot;get_user_pages() -- \nfast path&quot;
            ]
            get_user_page_fast_is_success [
                shape=&quot;diamond&quot;
                label=&quot;get_user_page_fast \nSUCCESS ?&quot;
            ]

            halt_vcpu [
                label=&quot;halt vcpu&quot;
            ]
            unhalt_vcpu_intr [
                shape=&quot;record&quot;
                label=&quot;interrupt&quot;
            ]

            unhalt_vcpu_kick [
                shape=&quot;record&quot;
                label=&quot;other KVM \nproduce \nkvm_vcpu_kick()&quot;
            ]

            unhalt_vcpu_and_re_VM_entry [
                label=&quot;unhalt and VM entry&quot;
            ]
            unhalt_vcpu_and_inject_timer [
                label=&quot;unhalt and inject a timer intr&quot;
            ]

            halt_vcpu-&gt;unhalt_vcpu_intr [
                label = &quot;detect intr event, UNHALT&quot;
            ]
            halt_vcpu-&gt;unhalt_vcpu_kick [
                label = &quot;detect vcpu kick event, UNHALT&quot;
            ]
            unhalt_vcpu_kick-&gt;unhalt_vcpu_and_re_VM_entry 
            get_user_page_fast-&gt;get_user_page_fast_is_success

            unhalt_vcpu_intr-&gt;unhalt_vcpu_and_inject_timer
            get_user_page_fast_is_success-&gt;halt_vcpu [
                label=N
            ]

            label=&quot;host kvm vcpu thread&quot;
        }
        subgraph cluster_host_dedicated_thread {
            get_user_page_slow_path [
                label=&quot;get_user_pages(slow path)&quot;
            ]

            have_get_page [
                label=&quot;get page, \nPAGE IS PRESENT!&quot;
            ]
            
            get_user_page_slow_path-&gt;have_get_page
        
            label=&quot;dedicated thread&quot;
        }
        subgraph cluster_host_timer {
            inject_a_timer_interrupt [
                label=&quot;inject a timer \ninterrupt to GUEST&quot;
            ]
            &quot;receive a timer \ninterrupt belong \nto GUEST&quot;-&gt;
                inject_a_timer_interrupt-&gt;
                unhalt_vcpu_intr
            label=&quot;timer&quot;
        }

        label = &quot;host&quot;
    }
    subgraph cluster_guest {
        style=&quot;filled&quot;
        color=&quot;#12323456&quot;
        subgraph cluster_guest_task1 {
            task1_access_a_memory [
                label=&quot;acesss a memory address [BEG]&quot;
                color=&quot;white&quot;
                style=&quot;filled&quot;
            ]

            trigger_EPT_violation [
                label=&quot;trigger EPT violation&quot;
            ]

            task1_access_a_memory -&gt;
                trigger_EPT_violation [
                label=&quot;page NOT present&quot;
            ]
            label=&quot;TASK1 trigger ept vioaltion&quot;
        }
        
        subgraph cluster_guest_task2 {
        
        }
    
        subgraph cluster_guest_schedule_model {
            timer_schedule_handler [
                label=&quot;receive  a timer \ninterrupt, need schedule&quot;
            ]
            label=&quot;schedule module&quot;
        }
        label=&quot;guest&quot;
    }
    trigger_EPT_violation-&gt;get_user_page_fast

    unhalt_vcpu_and_inject_timer-&gt;timer_schedule_handler [
        label=&quot;inject intr event&quot;
    ]
    have_get_page-&gt;unhalt_vcpu_kick
    unhalt_vcpu_and_re_VM_entry-&gt;task1_access_a_memory
    get_user_page_fast_is_success-&gt;get_user_page_slow_path [
        label=&quot;N&quot;
    ]
}
</desc>

<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 829.83)">
<title>G</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-829.83 1119,-829.83 1119,4 -4,4" />
<g id="clust1" class="cluster">
<title>cluster_host</title>
<polygon fill="#713245" fill-opacity="0.337255" stroke="#713245" stroke-opacity="0.337255" points="8,-257.74 8,-817.83 1103,-817.83 1103,-257.74 8,-257.74" />
<text text-anchor="middle" x="555.5" y="-802.63" font-family="Times,serif" font-size="14.00">host</text>
</g>
<g id="clust2" class="cluster">
<title>cluster_host_vcpu_thread</title>
<polygon fill="#713245" fill-opacity="0.337255" stroke="#713245" stroke-opacity="0.337255" points="264,-265.74 264,-786.83 803,-786.83 803,-265.74 264,-265.74" />
<text text-anchor="middle" x="533.5" y="-771.63" font-family="Times,serif" font-size="14.00">host kvm vcpu thread</text>
</g>
<g id="clust3" class="cluster">
<title>cluster_host_dedicated_thread</title>
<polygon fill="#713245" fill-opacity="0.337255" stroke="#713245" stroke-opacity="0.337255" points="811,-338.87 811,-527.61 1095,-527.61 1095,-338.87 811,-338.87" />
<text text-anchor="middle" x="953" y="-512.41" font-family="Times,serif" font-size="14.00">dedicated thread</text>
</g>
<g id="clust4" class="cluster">
<title>cluster_host_timer</title>
<polygon fill="#713245" fill-opacity="0.337255" stroke="#713245" stroke-opacity="0.337255" points="16,-443.74 16,-675.09 256,-675.09 256,-443.74 16,-443.74" />
<text text-anchor="middle" x="136" y="-659.89" font-family="Times,serif" font-size="14.00">timer</text>
</g>
<g id="clust5" class="cluster">
<title>cluster_guest</title>
<polygon fill="#123234" fill-opacity="0.337255" stroke="#123234" stroke-opacity="0.337255" points="202,-8 202,-226.74 852,-226.74 852,-8 202,-8" />
<text text-anchor="middle" x="527" y="-211.54" font-family="Times,serif" font-size="14.00">guest</text>
</g>
<g id="clust6" class="cluster">
<title>cluster_guest_task1</title>
<polygon fill="#123234" fill-opacity="0.337255" stroke="#123234" stroke-opacity="0.337255" points="210,-16 210,-186.87 548,-186.87 548,-16 210,-16" />
<text text-anchor="middle" x="379" y="-171.67" font-family="Times,serif" font-size="14.00">TASK1 trigger ept vioaltion</text>
</g>
<g id="clust8" class="cluster">
<title>cluster_guest_schedule_model</title>
<polygon fill="#123234" fill-opacity="0.337255" stroke="#123234" stroke-opacity="0.337255" points="556,-103 556,-195.74 844,-195.74 844,-103 556,-103" />
<text text-anchor="middle" x="700" y="-180.54" font-family="Times,serif" font-size="14.00">schedule module</text>
</g>
<!-- get_user_page_fast -->
<g id="node1" class="node">
<title>get_user_page_fast</title>
<ellipse fill="none" stroke="black" cx="661" cy="-728.96" rx="109.7" ry="26.74" />
<text text-anchor="middle" x="661" y="-732.76" font-family="Times,serif" font-size="14.00">get_user_pages() &#45;&#45; </text>
<text text-anchor="middle" x="661" y="-717.76" font-family="Times,serif" font-size="14.00">fast path</text>
</g>
<!-- get_user_page_fast_is_success -->
<g id="node2" class="node">
<title>get_user_page_fast_is_success</title>
<polygon fill="none" stroke="black" points="637,-644.61 479,-606.61 637,-568.61 795,-606.61 637,-644.61" />
<text text-anchor="middle" x="637" y="-610.41" font-family="Times,serif" font-size="14.00">get_user_page_fast </text>
<text text-anchor="middle" x="637" y="-595.41" font-family="Times,serif" font-size="14.00">SUCCESS ?</text>
</g>
<!-- get_user_page_fast&#45;&gt;get_user_page_fast_is_success -->
<g id="edge4" class="edge">
<title>get_user_page_fast&#45;&gt;get_user_page_fast_is_success</title>
<path fill="none" stroke="black" d="M655.79,-701.84C652.96,-687.65 649.38,-669.68 646.1,-653.24" />
<polygon fill="black" stroke="black" points="649.5,-652.38 644.11,-643.26 642.63,-653.75 649.5,-652.38" />
</g>
<!-- halt_vcpu -->
<g id="node3" class="node">
<title>halt_vcpu</title>
<ellipse fill="none" stroke="black" cx="602" cy="-478.61" rx="53.89" ry="18" />
<text text-anchor="middle" x="602" y="-474.91" font-family="Times,serif" font-size="14.00">halt vcpu</text>
</g>
<!-- get_user_page_fast_is_success&#45;&gt;halt_vcpu -->
<g id="edge6" class="edge">
<title>get_user_page_fast_is_success&#45;&gt;halt_vcpu</title>
<path fill="none" stroke="black" d="M627.34,-570.85C621.68,-550.44 614.62,-525.05 609.4,-506.24" />
<polygon fill="black" stroke="black" points="612.75,-505.24 606.7,-496.54 606.01,-507.12 612.75,-505.24" />
<text text-anchor="middle" x="627.5" y="-539.41" font-family="Times,serif" font-size="14.00">N</text>
</g>
<!-- get_user_page_slow_path -->
<g id="node8" class="node">
<title>get_user_page_slow_path</title>
<ellipse fill="none" stroke="black" cx="953" cy="-478.61" rx="133.78" ry="18" />
<text text-anchor="middle" x="953" y="-474.91" font-family="Times,serif" font-size="14.00">get_user_pages(slow path)</text>
</g>
<!-- get_user_page_fast_is_success&#45;&gt;get_user_page_slow_path -->
<g id="edge15" class="edge">
<title>get_user_page_fast_is_success&#45;&gt;get_user_page_slow_path</title>
<path fill="none" stroke="black" d="M694.96,-582.5C754.58,-558.73 846.5,-522.08 903.02,-499.54" />
<polygon fill="black" stroke="black" points="904.47,-502.73 912.47,-495.77 901.88,-496.23 904.47,-502.73" />
<text text-anchor="middle" x="810.5" y="-539.41" font-family="Times,serif" font-size="14.00">N</text>
</g>
<!-- unhalt_vcpu_intr -->
<g id="node4" class="node">
<title>unhalt_vcpu_intr</title>
<polygon fill="none" stroke="black" points="561,-355.74 561,-391.74 643,-391.74 643,-355.74 561,-355.74" />
<text text-anchor="middle" x="602" y="-370.04" font-family="Times,serif" font-size="14.00">interrupt</text>
</g>
<!-- halt_vcpu&#45;&gt;unhalt_vcpu_intr -->
<g id="edge1" class="edge">
<title>halt_vcpu&#45;&gt;unhalt_vcpu_intr</title>
<path fill="none" stroke="black" d="M602,-460.16C602,-444.25 602,-420.49 602,-402.07" />
<polygon fill="black" stroke="black" points="605.5,-401.93 602,-391.93 598.5,-401.93 605.5,-401.93" />
<text text-anchor="middle" x="698.5" y="-422.54" font-family="Times,serif" font-size="14.00">detect intr event, UNHALT</text>
</g>
<!-- unhalt_vcpu_kick -->
<g id="node5" class="node">
<title>unhalt_vcpu_kick</title>
<polygon fill="none" stroke="black" points="312.5,-347.24 312.5,-400.24 445.5,-400.24 445.5,-347.24 312.5,-347.24" />
<text text-anchor="middle" x="379" y="-385.04" font-family="Times,serif" font-size="14.00">other KVM </text>
<text text-anchor="middle" x="379" y="-370.04" font-family="Times,serif" font-size="14.00">produce </text>
<text text-anchor="middle" x="379" y="-355.04" font-family="Times,serif" font-size="14.00">kvm_vcpu_kick()</text>
</g>
<!-- halt_vcpu&#45;&gt;unhalt_vcpu_kick -->
<g id="edge2" class="edge">
<title>halt_vcpu&#45;&gt;unhalt_vcpu_kick</title>
<path fill="none" stroke="black" d="M548.81,-475.43C486.23,-471.61 387.91,-461.28 365,-433.74 359.37,-426.98 358.91,-418.34 360.84,-409.78" />
<polygon fill="black" stroke="black" points="364.18,-410.84 363.89,-400.25 357.51,-408.71 364.18,-410.84" />
<text text-anchor="middle" x="481.5" y="-422.54" font-family="Times,serif" font-size="14.00">detect vcpu kick event, UNHALT</text>
</g>
<!-- unhalt_vcpu_and_inject_timer -->
<g id="node7" class="node">
<title>unhalt_vcpu_and_inject_timer</title>
<ellipse fill="none" stroke="black" cx="649" cy="-291.74" rx="145.67" ry="18" />
<text text-anchor="middle" x="649" y="-288.04" font-family="Times,serif" font-size="14.00">unhalt and inject a timer intr</text>
</g>
<!-- unhalt_vcpu_intr&#45;&gt;unhalt_vcpu_and_inject_timer -->
<g id="edge5" class="edge">
<title>unhalt_vcpu_intr&#45;&gt;unhalt_vcpu_and_inject_timer</title>
<path fill="none" stroke="black" d="M612.2,-355.38C618.52,-344.62 626.77,-330.59 633.85,-318.53" />
<polygon fill="black" stroke="black" points="636.94,-320.19 638.98,-309.79 630.9,-316.64 636.94,-320.19" />
</g>
<!-- unhalt_vcpu_and_re_VM_entry -->
<g id="node6" class="node">
<title>unhalt_vcpu_and_re_VM_entry</title>
<ellipse fill="none" stroke="black" cx="379" cy="-291.74" rx="106.68" ry="18" />
<text text-anchor="middle" x="379" y="-288.04" font-family="Times,serif" font-size="14.00">unhalt and VM entry</text>
</g>
<!-- unhalt_vcpu_kick&#45;&gt;unhalt_vcpu_and_re_VM_entry -->
<g id="edge3" class="edge">
<title>unhalt_vcpu_kick&#45;&gt;unhalt_vcpu_and_re_VM_entry</title>
<path fill="none" stroke="black" d="M379,-346.99C379,-338.41 379,-328.84 379,-320.14" />
<polygon fill="black" stroke="black" points="382.5,-320.11 379,-310.11 375.5,-320.11 382.5,-320.11" />
</g>
<!-- task1_access_a_memory -->
<g id="node12" class="node">
<title>task1_access_a_memory</title>
<ellipse fill="white" stroke="white" cx="379" cy="-137.87" rx="160.57" ry="18" />
<text text-anchor="middle" x="379" y="-134.17" font-family="Times,serif" font-size="14.00">acesss a memory address [BEG]</text>
</g>
<!-- unhalt_vcpu_and_re_VM_entry&#45;&gt;task1_access_a_memory -->
<g id="edge14" class="edge">
<title>unhalt_vcpu_and_re_VM_entry&#45;&gt;task1_access_a_memory</title>
<path fill="none" stroke="black" d="M379,-273.61C379,-247.52 379,-197.56 379,-166.35" />
<polygon fill="black" stroke="black" points="382.5,-166.17 379,-156.17 375.5,-166.17 382.5,-166.17" />
</g>
<!-- timer_schedule_handler -->
<g id="node14" class="node">
<title>timer_schedule_handler</title>
<ellipse fill="none" stroke="black" cx="700" cy="-137.87" rx="136.44" ry="26.74" />
<text text-anchor="middle" x="700" y="-141.67" font-family="Times,serif" font-size="14.00">receive &#160;a timer </text>
<text text-anchor="middle" x="700" y="-126.67" font-family="Times,serif" font-size="14.00">interrupt, need schedule</text>
</g>
<!-- unhalt_vcpu_and_inject_timer&#45;&gt;timer_schedule_handler -->
<g id="edge12" class="edge">
<title>unhalt_vcpu_and_inject_timer&#45;&gt;timer_schedule_handler</title>
<path fill="none" stroke="black" d="M654.75,-273.61C662.79,-249.67 677.58,-205.64 688.06,-174.44" />
<polygon fill="black" stroke="black" points="691.43,-175.39 691.29,-164.8 684.79,-173.16 691.43,-175.39" />
<text text-anchor="middle" x="723.5" y="-238.54" font-family="Times,serif" font-size="14.00">inject intr event</text>
</g>
<!-- have_get_page -->
<g id="node9" class="node">
<title>have_get_page</title>
<ellipse fill="none" stroke="black" cx="942" cy="-373.74" rx="111.95" ry="26.74" />
<text text-anchor="middle" x="942" y="-377.54" font-family="Times,serif" font-size="14.00">get page, </text>
<text text-anchor="middle" x="942" y="-362.54" font-family="Times,serif" font-size="14.00">PAGE IS PRESENT!</text>
</g>
<!-- get_user_page_slow_path&#45;&gt;have_get_page -->
<g id="edge7" class="edge">
<title>get_user_page_slow_path&#45;&gt;have_get_page</title>
<path fill="none" stroke="black" d="M951.13,-460.16C949.69,-446.68 947.65,-427.56 945.86,-410.82" />
<polygon fill="black" stroke="black" points="949.33,-410.36 944.79,-400.79 942.37,-411.1 949.33,-410.36" />
</g>
<!-- have_get_page&#45;&gt;unhalt_vcpu_kick -->
<g id="edge13" class="edge">
<title>have_get_page&#45;&gt;unhalt_vcpu_kick</title>
<path fill="none" stroke="black" d="M886.31,-397.21C860.04,-407.05 827.94,-417.33 798,-422.24 694.05,-439.27 665.44,-435.92 561,-422.24 525.74,-417.62 487.59,-408.18 455.38,-398.84" />
<polygon fill="black" stroke="black" points="456.16,-395.42 445.58,-395.95 454.18,-402.13 456.16,-395.42" />
</g>
<!-- inject_a_timer_interrupt -->
<g id="node10" class="node">
<title>inject_a_timer_interrupt</title>
<ellipse fill="none" stroke="black" cx="136" cy="-478.61" rx="111.95" ry="26.74" />
<text text-anchor="middle" x="136" y="-482.41" font-family="Times,serif" font-size="14.00">inject a timer </text>
<text text-anchor="middle" x="136" y="-467.41" font-family="Times,serif" font-size="14.00">interrupt to GUEST</text>
</g>
<!-- inject_a_timer_interrupt&#45;&gt;unhalt_vcpu_intr -->
<g id="edge9" class="edge">
<title>inject_a_timer_interrupt&#45;&gt;unhalt_vcpu_intr</title>
<path fill="none" stroke="black" d="M207.77,-457.88C224.88,-453.22 243.08,-448.28 260,-443.74 302.17,-432.43 312.36,-428.13 355,-418.74 359.78,-417.69 479.82,-396.38 550.77,-383.81" />
<polygon fill="black" stroke="black" points="551.62,-387.22 560.86,-382.03 550.4,-380.32 551.62,-387.22" />
</g>
<!-- receive a timer \ninterrupt belong \nto GUEST -->
<g id="node11" class="node">
<title>receive a timer \ninterrupt belong \nto GUEST</title>
<ellipse fill="none" stroke="black" cx="136" cy="-606.61" rx="98.08" ry="37.45" />
<text text-anchor="middle" x="136" y="-617.91" font-family="Times,serif" font-size="14.00">receive a timer </text>
<text text-anchor="middle" x="136" y="-602.91" font-family="Times,serif" font-size="14.00">interrupt belong </text>
<text text-anchor="middle" x="136" y="-587.91" font-family="Times,serif" font-size="14.00">to GUEST</text>
</g>
<!-- receive a timer \ninterrupt belong \nto GUEST&#45;&gt;inject_a_timer_interrupt -->
<g id="edge8" class="edge">
<title>receive a timer \ninterrupt belong \nto GUEST&#45;&gt;inject_a_timer_interrupt</title>
<path fill="none" stroke="black" d="M136,-568.83C136,-552.26 136,-532.75 136,-516.21" />
<polygon fill="black" stroke="black" points="139.5,-515.83 136,-505.83 132.5,-515.83 139.5,-515.83" />
</g>
<!-- trigger_EPT_violation -->
<g id="node13" class="node">
<title>trigger_EPT_violation</title>
<ellipse fill="none" stroke="black" cx="418" cy="-42" rx="108.58" ry="18" />
<text text-anchor="middle" x="418" y="-38.3" font-family="Times,serif" font-size="14.00">trigger EPT violation</text>
</g>
<!-- task1_access_a_memory&#45;&gt;trigger_EPT_violation -->
<g id="edge10" class="edge">
<title>task1_access_a_memory&#45;&gt;trigger_EPT_violation</title>
<path fill="none" stroke="black" d="M386.15,-119.65C391.98,-105.63 400.31,-85.59 406.98,-69.51" />
<polygon fill="black" stroke="black" points="410.29,-70.69 410.89,-60.11 403.82,-68 410.29,-70.69" />
<text text-anchor="middle" x="468.5" y="-81.8" font-family="Times,serif" font-size="14.00">page NOT present</text>
</g>
<!-- trigger_EPT_violation&#45;&gt;get_user_page_fast -->
<g id="edge11" class="edge">
<title>trigger_EPT_violation&#45;&gt;get_user_page_fast</title>
<path fill="none" stroke="black" d="M523.1,-46.52C717.82,-54.46 1115,-77.88 1115,-136.87 1115,-607.61 1115,-607.61 1115,-607.61 1115,-677.66 910.47,-707.9 775.97,-720.2" />
<polygon fill="black" stroke="black" points="775.66,-716.72 766.01,-721.09 776.28,-723.69 775.66,-716.72" />
</g>
</g>
</svg>
</div>

<p>这里需要注意的是:</p>
<ol>
  <li>上面是以timer interrupt 举例, 如果收到不是timer interrupt, 该中断也会inject 到
guest中, 只不过guest在处理完interrupt后,还会返回到之前的task, 在page 没有present
的情况下, 还会触发 EPT violation(包括如果收到了timer interrupt, 但是并没有执行sched
动作. 也是同样的情况). But so what ? 本来引入async pf 的目的, 就是让vcpu 能够去做些
别的任务? schedule other task &amp;&amp; handle interrupt, 都可以让vcpu 继续运行, 和 get_user_page(slow
path) 并行运行.</li>
  <li>该实现比较巧妙的时, 它对GUEST 完全透明, 当guest 触发async pf时, 当vcpu再次运行,
无论是收到interrupt, 还是 async pf complete kick this vcpu, 对于guest而言, 就像是
在触发异常指令之前的 instruction boundary执行了较长的时间(也就是触发异常的上一条指令)</li>
</ol>

<p>下面我们详细介绍下, PV async pf.</p>

<h1 id="pv-async-pf">PV async pf</h1>

<blockquote>
  <p>NOTE</p>

  <p>我们思考下, 该方式看似就已经解决问题了,为什么还要搞一个半虚拟化的方式, 来使该流程便复杂,
我们来看下该方式有何缺点:</p>

  <ul>
    <li>场景1
      <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre>vcpu_thread                 interrupt handler or work
   halt_vcpu

                            kick vcpu

   unhalt
   vcpu_enter
</pre></td></tr></tbody></table></code></pre></div>      </div>
      <p>可以看到在 halt_vcpu 之间, 到vcpu enter 之间, 有一个比较大的window, 如果能把 该window优化掉就好了</p>
    </li>
    <li>场景2
      <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre>vcpu_thread_kvm   host_intr_handler_or_work           GUEST
  halt_vcpu
                  kick_vcpu
  uhalt
  vcpu_enter
                                                      sched out task1
                                                      sched in task1
                                                      page is NOT present
                                                      trigger EPT violation
  vcpu_exit
  halt_vcpu
</pre></td></tr></tbody></table></code></pre></div>      </div>
      <p>可以看到, 这里在vcpu enter后, 还有可能调度回 task1, 接着触发EPT violation, 如果page
还没有present的话, 本次调度, 仍然会VM exit, 继续halt vcpu, 还会有场景1 中的较大的window.</p>
    </li>
  </ul>

  <p>所以通过上面两种场景看, 该方式的实现, 并不能做到与vcpu 与 <code class="language-plaintext highlighter-rouge">get_user_page_slow_path</code>做到完全平行.
还是会在某些地方有block</p>
</blockquote>

<p>结合上述, 我们首先需要思考下, 半虚拟化的 async pf要达到一个什么样的目的:</p>
<ol>
  <li>
    <p>尽量不去 halt vcpu, 让其能够在<code class="language-plaintext highlighter-rouge">get_user_page_fast()</code>没有成功的时候, 就可以VM-entry, 为了避免
再次执行触发EPT violation的指令, 需要打破现有的执行流程, 并且执行调度.</p>

    <p>而打破现有的执行流程, 无非是通过 INTERRUPT/EXCEPTION</p>
  </li>
  <li>
    <p>能够让GUEST知道, 哪些task是因为async pf被调度走了, 避免再page没有present的情况下, 将这些task
调度回来</p>
  </li>
</ol>

<p>而PV async pf, 就是多做了上面两件事.</p>]]></content><author><name>fuqiang</name></author><category term="kernel" /><category term="kvm" /><category term="para_virt" /><summary type="html"><![CDATA[introduce 在支持EPT的架构中, 对于GVA-&gt;HPA一般有两段映射: GVA-&gt;GPA GPA-&gt;HPA]]></summary></entry></feed>