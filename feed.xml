<feed xmlns="http://www.w3.org/2005/Atom"> <id>/</id><title>one step at a time</title><subtitle>A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle> <updated>2025-09-02T23:13:09+08:00</updated> <author> <name>fuqiang wang</name> <uri>/</uri> </author><link rel="self" type="application/atom+xml" href="/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="/"/> <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator> <rights> © 2025 fuqiang wang </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>schedule: overflow</title><link href="/posts/sched/" rel="alternate" type="text/html" title="schedule: overflow" /><published>2025-09-02T22:00:00+08:00</published> <updated>2025-09-02T22:00:00+08:00</updated> <id>/posts/sched/</id> <content src="/posts/sched/" /> <author> <name>fuqiang</name> </author> <category term="schedule" /> <summary>调度子系统的任务: 调度程序负责决定运行哪个程序，该程序运行多长时间。 调度系统的责任很明确, 需要在不富裕的CPU上，合理的运行所有程序。目前的cpu架构决定, 在一个core上, 同一时间只能有一个task运行, 所以调度子系统会决定当前cpu运行某个进 程，并且让其他进程等待, 在合适的时机，将cpu上的进程调出，运行下一个合适的进程， 依次循环。 所以调度系统是建立在多任务的基础上构建, 我们可以设想下, 如果将来某一天，体系架构 从根本上变了, – CPU &amp;amp;gt;&amp;amp;gt; task number, Linus本人可能要执行rm -rf kernel/sched。 schedule system type 而这种多任务的调度系统分为两类: 非抢占式 抢占式 非抢占式是指在前一个任务未主动退出之前，调度子系统不会将另一个该任务踢出，运行另 一个任...</summary> </entry> <entry><title>[arm] learn CCA</title><link href="/posts/learn-CCA/" rel="alternate" type="text/html" title="[arm] learn CCA" /><published>2025-09-02T16:00:00+08:00</published> <updated>2025-09-02T16:00:00+08:00</updated> <id>/posts/learn-CCA/</id> <content src="/posts/learn-CCA/" /> <author> <name>fuqiang</name> </author> <category term="coco" /> <category term="CCA" /> <summary>1. Overview This guide describes: The role of confidential computing in modern compute platforms The principles of confidential computing. How the Arm Confidential Compute Architecture (Arm CCA) enables confidential computing in an Arm compute platform. 本指南介绍了： 机密计算在现代计算平台中的作用 机密计算的基本原理 Arm 机密计算架构（Arm CCA）如何在 Arm 计算平台上实现机密计算 After reading this guide, you will b...</summary> </entry> <entry><title>[arm] learn RME</title><link href="/posts/learn-RME/" rel="alternate" type="text/html" title="[arm] learn RME" /><published>2025-08-26T14:55:00+08:00</published> <updated>2025-08-26T14:55:00+08:00</updated> <id>/posts/learn-RME/</id> <content src="/posts/learn-RME/" /> <author> <name>fuqiang</name> </author> <category term="coco" /> <category term="RME" /> <summary>1. Overview This guide introduces the Realm Management Extension (RME), an extension to the architecture. RME is the hardware component of the Arm Confidential Compute Architecture (Arm CCA) which also includes software elements. RME dynamically transfers resources and memory to a new protected address space that higher privileged software or TrustZone firmware cannot access. Because of this a...</summary> </entry> <entry><title>[arm] RME(spec)</title><link href="/posts/RME-spec/" rel="alternate" type="text/html" title="[arm] RME(spec)" /><published>2025-08-26T14:55:00+08:00</published> <updated>2025-08-26T14:55:00+08:00</updated> <id>/posts/RME-spec/</id> <content src="/posts/RME-spec/" /> <author> <name>fuqiang</name> </author> <category term="coco" /> <category term="RME" /> <summary>B2.3.4 RME Device Assignment The term Assignable Device Interface refers to a portion of a device that can be independently assigned to software executing in one of the Security states. An assignable device interface can act as an independent requester and have its own private memory-mapped resources. RME Device Assignment (RME-DA) is an RME system feature that enables the secure assignment o...</summary> </entry> <entry><title>[arm] virtCCA</title><link href="/posts/virtcca-paper/" rel="alternate" type="text/html" title="[arm] virtCCA" /><published>2025-08-25T14:55:00+08:00</published> <updated>2025-08-25T14:55:00+08:00</updated> <id>/posts/virtcca-paper/</id> <content src="/posts/virtcca-paper/" /> <author> <name>fuqiang</name> </author> <category term="coco" /> <category term="virtCCA" /> <summary>ABSTRACT ARM recently introduced the Confidential Compute Architecture (CCA) as part of the upcoming ARMv9-A architecture. CCA enables the support of confidential virtual machines (cVMs) within a separate world called the Realm world, providing protection from the untrusted normal world. While CCA offers a promising future for confidential computing, the widespread availability of CCA hardware...</summary> </entry> </feed>
