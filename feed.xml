<feed xmlns="http://www.w3.org/2005/Atom"> <id>/</id><title>one step at a time</title><subtitle>A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle> <updated>2025-05-06T23:05:36+08:00</updated> <author> <name>fuqiang wang</name> <uri>/</uri> </author><link rel="self" type="application/atom+xml" href="/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="/"/> <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator> <rights> © 2025 fuqiang wang </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>page request</title><link href="/posts/page-request/" rel="alternate" type="text/html" title="page request" /><published>2025-05-06T11:00:00+08:00</published> <updated>2025-05-06T11:00:00+08:00</updated> <id>/posts/page-request/</id> <content src="/posts/page-request/" /> <author> <name>fuqiang</name> </author> <category term="pcie" /> <category term="ats" /> <summary>10.4 Page Request Services The general model for a page request is as follows: A Function determines that it requires access to a page for which an ATS translation is not available. The Function causes the associated Page Request Interface to send a Page Request Message to its RC. A Page Request Message contains a page address and a Page Request Group (PRG) index. The PRG in...</summary> </entry> <entry><title>drain pasid</title><link href="/posts/drain-pasid/" rel="alternate" type="text/html" title="drain pasid" /><published>2025-04-22T21:51:00+08:00</published> <updated>2025-04-22T21:51:00+08:00</updated> <id>/posts/drain-pasid/</id> <content src="/posts/drain-pasid/" /> <author> <name>fuqiang</name> </author> <category term="virt" /> <category term="iommu" /> <summary>PASID 简介 PASID overflow PASID 全称Process Address Space ID, PASID 同 requester ID结合，共同确定该request 所映射的地址空间。所以 PASID 和 ASID 类似, 均标识一个地址映射关系。但是ASID 用于 标识CPU 侧的memory request，而PASID 则标识PCIe end point 的DMA（还有其他request， 下面描述）. 我们结合上图, 对比下两者: ||ASID|PASID| |—|—|—| |memory request 发起者|CPU|PCIe EP| |通过该ID查阅对象|TLB|IOMMU DMA remapping table| |作用|让TLB中可以缓存多个地址空间映射|让IOMMU 可以为一个function 的request 使用不同的地址空间|...</summary> </entry> <entry><title>[perftest] core-to-core-latency</title><link href="/posts/Core-to-Core-latency/" rel="alternate" type="text/html" title="[perftest] core-to-core-latency" /><published>2025-04-09T11:50:00+08:00</published> <updated>2025-04-09T11:50:00+08:00</updated> <id>/posts/Core-to-Core-latency/</id> <content src="/posts/Core-to-Core-latency/" /> <author> <name>fuqiang</name> </author> <category term="perftest" /> <summary>使用方法 core-to-core-latency USAGE: core-to-core-latency [OPTIONS] [ARGS] ARGS: &amp;amp;lt;NUM_ITERATIONS&amp;amp;gt; The number of iterations per sample [default: 1000] &amp;amp;lt;NUM_SAMPLES&amp;amp;gt; The number of samples [default: 300] OPTIONS: -b, --bench &amp;amp;lt;BENCH&amp;amp;gt; Select which benchmark to run, in a comma delimited list, e.g., &amp;#39;1,3&amp;#39; 1: CAS latency on a sing...</summary> </entry> <entry><title>[perftest] lat mem rd</title><link href="/posts/lat-mem-bench/" rel="alternate" type="text/html" title="[perftest] lat mem rd" /><published>2025-04-09T11:50:00+08:00</published> <updated>2025-04-09T11:50:00+08:00</updated> <id>/posts/lat-mem-bench/</id> <content src="/posts/lat-mem-bench/" /> <author> <name>fuqiang</name> </author> <category term="perftest" /> <summary>使用方法 整体命令: [-P &amp;amp;lt;parallelism&amp;amp;gt;] [-W &amp;amp;lt;warmup&amp;amp;gt;] [-N &amp;amp;lt;repetitions&amp;amp;gt;] [-t] len [stride...] 参数解释: P: 并行运行线程数 t: 是否连续访问 W: warmup N: repetitions len: 访问数据块最大大小(该程序会循环测试，从较小的数据块开始测试，逐步 增加数据块大小，最高达到len大小) stride: 访问步长, 可以指定多个步长依次测试 命令示例: numactl -C 0 -m 0 ./bin/x86_64-linux-gnu/lat_mem_rd -P 1 -N 5 -t 1024m 512 1024 解释: numactl: -C 0: 将进程绑定在cpu ...</summary> </entry> <entry><title>ats</title><link href="/posts/ats/" rel="alternate" type="text/html" title="ats" /><published>2025-03-31T11:00:00+08:00</published> <updated>2025-03-31T11:00:00+08:00</updated> <id>/posts/ats/</id> <content src="/posts/ats/" /> <author> <name>fuqiang</name> </author> <category term="pcie" /> <category term="acs" /> <summary>ATS Specification 10.1 ATS Architectural Overview Most contemporary system architectures make provisions for translating addresses from DMA (bus mastering) I/O Functions. In many implementations, it has been common practice to assume that the physical address space seen by the CPU and by an I/O Function is equivalent. While in others, this is not the case. The address programmed into an I/O F...</summary> </entry> </feed>
