<feed xmlns="http://www.w3.org/2005/Atom"> <id>/</id><title>one step at a time</title><subtitle>A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle> <updated>2025-08-04T13:15:30+08:00</updated> <author> <name>fuqiang wang</name> <uri>/</uri> </author><link rel="self" type="application/atom+xml" href="/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="/"/> <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator> <rights> © 2025 fuqiang wang </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>virtio notify</title><link href="/posts/virtio-notify/" rel="alternate" type="text/html" title="virtio notify" /><published>2025-06-09T18:10:00+08:00</published> <updated>2025-06-09T18:10:00+08:00</updated> <id>/posts/virtio-notify/</id> <content src="/posts/virtio-notify/" /> <author> <name>fuqiang</name> </author> <category term="virt" /> <category term="io_virt" /> <summary>virtio feature : VIRTIO_RING_F_EVENT_IDX 我们这里抽象下，先定义一个producer, consumer的模型, 将 event_idx定义为head，将vring.idx定义为tail, 即 consumer modify head producer modify tail(和vring.idx一样，表示producer下次要存储数据的位置) 整个逻辑如下: consumer: while have_notify(): while head &amp;amp;lt; tail: handle data ring[head] head++ STORE head producer: while get_put_data() as data: put data into ring[tail] t1 = ge...</summary> </entry> <entry><title>一文搞懵IO虚拟化之 -- virtio</title><link href="/posts/virtio/" rel="alternate" type="text/html" title="一文搞懵IO虚拟化之 -- virtio" /><published>2025-06-05T09:21:00+08:00</published> <updated>2025-06-05T09:21:00+08:00</updated> <id>/posts/virtio/</id> <content src="/posts/virtio/" /> <author> <name>fuqiang</name> </author> <category term="virt" /> <category term="io_virt" /> <summary>overflow virtio: ABSTRACTION API virtio-vring virtqueue ops vring vring struct vring notify sample of handle VirtIO why virtio is so efficient overflow virtio 起源于 2008 年的 virtio: Towards a De-Facto Standard For Virtual I/O Devices该论 文1,2, 而其诞生的背景是, Linux 内核作为guest支持高达8种虚拟化系统: Xen KVM VMware 的 VMI IB...</summary> </entry> <entry><title>Ebpf</title><link href="/posts/ebpf/" rel="alternate" type="text/html" title="Ebpf" /><published>2025-05-21T00:00:00+08:00</published> <updated>2025-05-21T00:00:00+08:00</updated> <id>/posts/ebpf/</id> <content src="/posts/ebpf/" /> <author> <name>fuqiang wang</name> </author> <summary></summary> </entry> <entry><title>Bpf Verify</title><link href="/posts/bpf-verify/" rel="alternate" type="text/html" title="Bpf Verify" /><published>2025-05-21T00:00:00+08:00</published> <updated>2025-05-21T00:00:00+08:00</updated> <id>/posts/bpf-verify/</id> <content src="/posts/bpf-verify/" /> <author> <name>fuqiang wang</name> </author> <summary></summary> </entry> <entry><title>Bpf Jit</title><link href="/posts/bpf-jit/" rel="alternate" type="text/html" title="Bpf Jit" /><published>2025-05-21T00:00:00+08:00</published> <updated>2025-05-21T00:00:00+08:00</updated> <id>/posts/bpf-jit/</id> <content src="/posts/bpf-jit/" /> <author> <name>fuqiang wang</name> </author> <summary></summary> </entry> </feed>
