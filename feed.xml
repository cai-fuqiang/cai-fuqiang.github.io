<feed xmlns="http://www.w3.org/2005/Atom"> <id>/</id><title>one step at a time</title><subtitle>A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle> <updated>2025-02-26T23:12:34+08:00</updated> <author> <name>fuqiang wang</name> <uri>/</uri> </author><link rel="self" type="application/atom+xml" href="/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="/"/> <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator> <rights> © 2025 fuqiang wang </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>qemu coroutine</title><link href="/posts/coroutine/" rel="alternate" type="text/html" title="qemu coroutine" /><published>2025-02-25T11:00:00+08:00</published> <updated>2025-02-25T11:00:00+08:00</updated> <id>/posts/coroutine/</id> <content src="/posts/coroutine/" /> <author> <name>fuqiang</name> </author> <category term="qemu" /> <category term="coroutine" /> <summary>Introduction Linux User Context Switch qemu coroutine 协程状态机 CREATE and INIT enter switch yield Use Case for QEMU Introduction 多线程和协程都可以用于并行编程，但是他们实现方式和使用场景 有很大的区别，我们来对比下: 对比项 协程 多线程 实现方式 在用户态单线程中，完成上下文切换 内核态完成上下文切换 开销 开销较低 线程创建销毁，以及切换都需要进入内核态，开销较高 ...</summary> </entry> <entry><title>qpos -- amd spec</title><link href="/posts/pqos/" rel="alternate" type="text/html" title="qpos -- amd spec" /><published>2025-02-12T14:18:00+08:00</published> <updated>2025-02-12T14:18:00+08:00</updated> <id>/posts/pqos/</id> <content src="/posts/pqos/" /> <author> <name>fuqiang</name> </author> <category term="amd_sdm" /> <category term="qpos" /> <summary>introduce overflow features features detect PQM CPUID (PQM) configuration PQM MSR Monitoring L3 Occupancy MBM BMEC AMBC PQE cat L3BE L3SMBE SDCIAE 相关链接 其他资讯 introduce amd PQOS ~= intel R...</summary> </entry> <entry><title>rdt -- intel spec</title><link href="/posts/rdt/" rel="alternate" type="text/html" title="rdt -- intel spec" /><published>2025-02-10T15:00:00+08:00</published> <updated>2025-02-10T15:00:00+08:00</updated> <id>/posts/rdt/</id> <content src="/posts/rdt/" /> <author> <name>fuqiang</name> </author> <category term="intel_sdm" /> <category term="rdt" /> <summary>introduce Backgroud MAIN features overflow object (abstract) concrete definition MONITOR CPUID (EAX 0FH) IA32_PQR_ASSOC (RMID Field) IA32_QM_EVTSEL and IA32_QM_CTR CONTROL CPUID (EAX 10H) IA32_PQR_ASSOC (CLOS Field) CAT cat configuration how cat work ...</summary> </entry> <entry><title>dirty tracking</title><link href="/posts/dirty-tracking/" rel="alternate" type="text/html" title="dirty tracking" /><published>2025-02-08T22:20:00+08:00</published> <updated>2025-02-08T22:20:00+08:00</updated> <id>/posts/dirty-tracking/</id> <content src="/posts/dirty-tracking/" /> <author> <name>fuqiang</name> </author> <category term="live_migration" /> <summary>图示</summary> </entry> <entry><title>vfio</title><link href="/posts/vfio/" rel="alternate" type="text/html" title="vfio" /><published>2025-01-25T17:00:00+08:00</published> <updated>2025-01-25T17:00:00+08:00</updated> <id>/posts/vfio/</id> <content src="/posts/vfio/" /> <author> <name>fuqiang</name> </author> <category term="virt" /> <category term="vfio" /> <summary>vfio qemu vfio_realize =&amp;amp;gt; vfio_attach_device =&amp;amp;gt; VFIOIOMMUClass-&amp;amp;gt;attach_device : vfio_iommu_legacy_class_init : iommufd_cdev_attach vfio_iommu_legacy_attach_device vfio_iommu_legacy_attach_device =&amp;amp;gt; groupid = vfio_device_groupid() =&amp;amp;gt; group_patch = readlink(&amp;quot;/sys//sys/devices/pci{domain}:{bus}/{domain}:{bus}/{b:d.f}/iommu_group&amp;quot;) ...</summary> </entry> </feed>
